* Buffer Management Configuration
*** Buffer Selection
    #+begin_src emacs-lisp
    (use-package bufler
      :commands (bufler)
      :init
      (bind-key "C-x C-b" 'bufler))
    #+end_src

*** Folding
    Vimish-fold allows creation of arbitrary in-buffer folds based on the selected region

    #+begin_src emacs-lisp

    (use-package vimish-fold
      :commands (vimish-fold-toggle vimish-fold)
      :init
      (vimish-fold-global-mode 1))
    #+end_src

*** Popup Buffers
    #+begin_src emacs-lisp
    (use-package shackle
      :config
      (setq shackle-rules '((compilation-mode :noselect t))
            shackle-default-rule '(:select t)))
    #+end_src

*** Window Navigation
    Windmove allows navigation between windows using arrow keys which is
    useful for quickly switching between a couple of active windows. Ace
    Window allows jumping between numbered windows which is useful when there
    are more to navigate

    #+begin_src emacs-lisp
    (use-package ace-window
      :bind ("C-x o" . ace-window)
      :config
      (ace-window-display-mode))

    (use-package windmove
      :config
      (global-set-key (kbd "C-c <left>")  'windmove-left)
      (global-set-key (kbd "C-c <right>") 'windmove-right)
      (global-set-key (kbd "C-c <up>")    'windmove-up)
      (global-set-key (kbd "C-c <down>")  'windmove-down))
    #+end_src

*** PDF Buffers
    #+begin_src emacs-lisp
    (use-package pdf-tools
      :config
      (pdf-tools-install :no-query)
      (define-key pdf-view-mode-map (kbd "C-s") 'isearch-forward))
    #+end_src

*** Buffer Navigation
    #+begin_src emacs-lisp
    (use-package avy
      :bind (("C-c l" . #'avy-goto-line)
             ("C-c j" . #'avy-goto-char-timer)
             ("C-c v" . #'avy-goto-word-1)))
    #+end_src

*** Undo
    #+begin_src emacs-lisp
    (use-package undo-tree
      :init
      (global-undo-tree-mode)
      :config
      (setq undo-tree-history-directory-alist '(("." . "~/.emacs.d/undo")))
      (setq undo-tree-visualizer-timestamps t
            undo-tree-visualizer-diff t))
    #+end_src

*** Colour Theme
    - Use the base16-emacs theme implementation
    - https://github.com/belak/base16-emacs
    - This has a version of solarized-dark which is the theme I generally use
    - The theme is loaded and then a few minor tweaks applied before reloading
      to apply these
    - The cursor colour is also changed after loading as it's set to a horrible
      red by default

    #+begin_src emacs-lisp
    (use-package base16-theme
      :init
      (load-theme 'base16-solarized-dark t)
      :config
      (setq base16-solarized-dark-theme-colors
            (plist-put base16-solarized-dark-theme-colors ':base09 "#586e75"))
      (load-theme 'base16-solarized-dark t)
      (set-cursor-color (plist-get base16-solarized-dark-theme-colors ':base02))
      (set-face-attribute 'mode-line nil :background (plist-get base16-solarized-dark-theme-colors ':base01))
      (face-spec-set 'font-lock-variable-name-face
                     `((t :foreground ,(plist-get base16-solarized-dark-theme-colors ':base06)))
                     'face-override-spec))
    #+end_src
